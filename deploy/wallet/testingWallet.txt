Assume wallet is 2of3 with daily limit of 900 wei.

TO DEPLOY USING TRUFFLE 1.0
create project dir and go in it
truffle init
Put Wallet.sol (rename to capital W) in contract dir and remove others
Put deployWallet.js in the root of truffle project dir
In truffle.js add:
module.exports = {
  "after_deploy": ["deployWallet.js"]
}
and comment out the values in the "deploy" array
Then run `truffle deploy`


For testing, run these commands in a `truffle console`.

LOAD WALLET
var walletAddr = '0x338c1d1aaada5b55c2edaac20630ad6682f5ad3f';
eth.sendTransaction({from: eth.accounts[0], to: walletAddr, gas: 99000, value: 50000});


var walletAddr = '0x338c1d1aaada5b55c2edaac20630ad6682f5ad3f';
var first = '0x9fc6fefd7f33ca29ee17f2bfec944695e5f29caf';
var third = '0xfb365748c912fca6808db267342846645f3289e4';
Wallet.at(walletAddr).execute(third, 100, 0, {from:first, gas:99000});
Wallet.at(walletAddr).execute(third, 500, 0, {from:first, gas:99000});
Wallet.at(walletAddr).execute(third, 300, 0, {from:first, gas:99000});

Now this should not transfer
Wallet.at(walletAddr).execute(third, 4, 0, {from:first, gas:99000});

GET OPERATION HASH
//var eventConf = Wallet.at(walletAddr).ConfirmationNeeded({initiatior:first});
var eventConf = Wallet.at(walletAddr).ConfirmationNeeded({},{fromBlock:0, toBlock:'latest'});
eventConf.watch(function(error, result){
  if (!error)
    console.log(result);
});

eventConf.stopWatching();

Unlock the 2nd account, then this should transfer
Wallet.at(walletAddr).execute(third, 4, 0, {from:first, gas:99000});

