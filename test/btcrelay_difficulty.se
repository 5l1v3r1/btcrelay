# test only method required by some tests
def testingonlySetHeaviest(blockHash):
    self.heaviestBlock = blockHash

macro DIFFICULTY_ADJUSTMENT_INTERVAL: 3


#
# macro wrappers (since only functions are testable)
#

# TODO needed?
def funcTimestampViaCALLDATALOAD(blockHeaderBytes:str):
    return(m_timestampFromCurrentBlockHeader())

def funcTargetFromBits(bits):
    return(targetFromBits(bits))

def funcToCompactBits(val):
    return(m_toCompactBits(val))

def funcComputeNewBits(prevTime, startTime, prevTarget):
    return(m_computeNewBits(prevTime, startTime, prevTarget))

#
# end of macro wrappers
#

# very specialized tests that can only work with initialParent 99999
# macro m_getHeight($blockHash):
#     div(sload(ref(self.block[$blockHash]._info)), BYTES_24) - 2

# testing overrides should be before the contract being tested
inset('_disableTokens.se')
inset('../btcrelay.se')
